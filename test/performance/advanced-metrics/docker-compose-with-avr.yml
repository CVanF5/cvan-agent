version: "3"
services:
  avr:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2048M
    networks:
      - test_network
    build:
      context: .
      dockerfile: avr_harness/Dockerfile_avr
    environment:
      AVR_SOCKET: "${SOCKET_DIR}/bench.sock"
      PROMETHEUS_PORT: "${PROMETHEUS_PORT_ADVANCED_METRICS}"
    volumes:
      - ${SOCKET_DIR}:${SOCKET_DIR}

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
    networks:
      - test_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - test_network

  harness:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M
    networks:
      - test_network
    build:
      context: .
      dockerfile: avr_harness/Dockerfile
    environment:
      NATS_PORT: "${NATS_PORT}"
      PROMETHEUS_PORT: "${PROMETHEUS_PORT_ADVANCED_METRICS}"
    ports:
      - ${NATS_PORT}:${NATS_PORT}
    depends_on:
      - avr

  avr-benchmark-generator:
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2048M
    networks:
      - test_network
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      AVR_SOCKET: "${SOCKET_DIR}/bench.sock"
      UNIQUE_DIMENSION_PERCENTAGE: "${UNIQUE_DIMENSION_PERCENTAGE}"
      DIMENSION_SIZE: "${DIMENSION_SIZE}"
      METRICS_PER_MINUTE: "${METRICS_PER_MINUTE}"
      DURATION: "${DURATION}"
      PROMETHEUS_PORT: "${PROMETHEUS_PORT_GENERATOR}"
      SIMPLE_BENCHMARK: "$SIMPLE_BENCHMARK"
    volumes:
      - ${SOCKET_DIR}:${SOCKET_DIR}
    depends_on:
      - avr

networks:
  test_network:
    driver: bridge
