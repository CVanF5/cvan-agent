syntax = "proto3";
package f5.nginx.agent.api.grpc.mpi.v1;

option go_package = "github.com/nginx/agent/v3/api/grpc/mpi/v1";

import "common.proto";
import "file.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// following https://protobuf.dev/programming-guides/style/
service CommandService {
    // connects Agents to the Management Plane
    rpc Connect(ConnectionRequest) returns (ConnectionResponse) {}
    // reports on instances and their configurations
    rpc Status(DataPlaneStatus) returns (google.protobuf.Empty) {}
    // reports on instance health
    rpc Health(DataPlaneHealth) returns (google.protobuf.Empty) {}
    // other messages
    rpc Subscribe(stream DataPlaneMessage) returns (stream ManagementPlaneMessage) {}
}

message ConnectionRequest {
    f5.nginx.agent.api.grpc.mpi.v1.common.MessageRequest message_metadata = 1;
    Instance agent = 2;
}

// need to build this out
message AgentConfig {
    Server server = 1;  // can we connect to more than one management plane?
    // Max NAck setting
    repeated google.protobuf.Struct labels = 2;
    repeated string features = 3;
}

message Server {
    string endpoint = 1;
    string port = 2;
}

// this to be built out
message NGINXConfig {
    string binary_path = 1;
    string hostname = 2;
    string ip_address = 3;
    string stub_status = 4;
    repeated string access_logs = 5;
    repeated string error_logs = 6;
}

// this to be built out
message NGINXPlusConfig {
    string binary_path = 1;
    string hostname = 2;
    string ip_address = 3;
    string api = 4;
    repeated string access_logs = 5; // is this correct for plus?
    repeated string error_logs = 6;  // is this correct for plus?
}

message ConnectionResponse {
    f5.nginx.agent.api.grpc.mpi.v1.common.CommandResponse response = 1;
    AgentConfig agent_config = 2;
}

message DataPlaneStatus {
    f5.nginx.agent.api.grpc.mpi.v1.common.MessageRequest message_metadata = 1;
    repeated Instance instances = 2;
}

// only send changed values
message Instance {
    InstanceMeta instance_meta = 1;
    InstanceConfig instance_config = 2;
}

message InstanceConfig {
    // repeated enum of actions?!?
    repeated InstanceAction actions = 1; // can put into a common object and reuse
    oneof config {
        AgentConfig agent_config = 2;
        NGINXConfig nginx_config = 3;
        NGINXPlusConfig nginx_plus_config = 4;
        // ... others NIC, NGF, Unit
    }
}

message InstanceAction {
    enum InstanceActions {
        UNKNOWN = 0;
        // TBD
    }
    InstanceActions action = 1;
}

message InstanceHealth {
    // Health status enum
    enum InstancHealthStatus {
        // Unknown status
        UNKNOWN = 0;
        // Healthy status
        HEALTHY = 1;
        // Unhealthy status
        UNHEALTHY = 2;
        // Degraded status
        DEGRADED = 3;
    }
    string instance_id = 1;
    // Health status
    InstancHealthStatus instance_health_status = 2;
    // Provides a human readable context around why a health status is a particular state
    string description = 3;
}

message InstanceMeta {
    string instance_id = 1;
    enum InstanceType {
        UNKNOWN = 0;
        AGENT = 1;
        NGINX_OSS = 2;
        NGINX_PLUS = 3;
        UNIT = 4;
    }
    InstanceType instance_type = 2;
    string version = 3;
}

message DataPlaneHealth {
    f5.nginx.agent.api.grpc.mpi.v1.common.MessageRequest message_metadata = 1;
    repeated InstanceHealth instance_health = 2;
}

message DataPlaneMessage {
    f5.nginx.agent.api.grpc.mpi.v1.common.MessageRequest message_metadata = 1;
    f5.nginx.agent.api.grpc.mpi.v1.common.CommandResponse command_response = 2; // triggers a RPC, acks message has been acted on
}

message ManagementPlaneMessage {
    f5.nginx.agent.api.grpc.mpi.v1.common.MessageRequest message_metadata = 1;
    oneof request {
        StatusRequest status_request = 2;
        HealthRequest health_request = 3;
        ConfigApplyRequest config_apply_request = 5;
        ConfigUploadRequest config_upload_request = 6;
        ActionRequest action_request = 7;
    }
}

message StatusRequest {}

message HealthRequest {}

message ConfigApplyRequest {
    f5.nginx.agent.api.grpc.mpi.v1.file.ConfigVersion config_version = 1;
    f5.nginx.agent.api.grpc.mpi.v1.file.FileOverview overview = 2; // optional
}

message ConfigUploadRequest {
    string instance_id = 1;
}

message ActionRequest {
    string instance_id = 1;
    InstanceAction action = 2;
    oneof payload {
        // add actions as we support new capabilities
        DefaultAction default_action = 3;
    }   
}

message DefaultAction {
    repeated google.protobuf.Struct params = 1;
}
