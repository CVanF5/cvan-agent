syntax = "proto3";
package f5.nginx.agent.api.grpc.mpi.v1;

option go_package = "github.com/nginx/agent/v3/api/grpc/mpi/v1/command;command";

import "common.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// following https://protobuf.dev/programming-guides/style/
service CommandService {
    rpc Connect(ConnectionRequest) returns (ConnectionResponse) {}
    rpc Status(DataPlaneStatus) returns (google.protobuf.Empty) {}
    rpc Health(DataPlaneHealth) returns (google.protobuf.Empty) {}
    // rpc Metadata(Instance) returns (google.protobuf.Empty) {} // this
    // is useful for registering new instances or instance updates, better to do
    // it not through subs
    rpc Subscribe(stream DataPlaneMessage) returns (stream ManagementPlaneMessage) {}
    // send one message at a time... having a list doesn't make sense?!?
}

message ConnectionRequest {
    f5.nginx.agent.api.grpc.mpi.v1.common.MessageRequest message_metadata = 1;
    Instance agent_metadata = 2;
    AgentConfig agent_config = 3;
}

message AgentConfig {
    Server server = 1;  // can we connect to more than one management plane?
    // Max NAck setting
    // Features enabled/disabled
    repeated google.protobuf.Struct labels = 2;
}

message Server {
    string endpoint = 1;
    string port = 2;
    // Security           security = 3;
    ConnectionSettings connection_settings = 3;
}

message ConnectionSettings {}

message AgentMetadata {
    string uuid = 1;
    string version = 2;
    string binary_path = 3;  // is this necessary? should it be in the instance
    // metadata for agent?!?
}

message ConnectionResponse {
    f5.nginx.agent.api.grpc.mpi.v1.common.CommandResponse response = 1;
    AgentConfig agent_config = 2;
}

message Overview {}

message DataPlaneStatus {
    f5.nginx.agent.api.grpc.mpi.v1.common.MessageRequest message_metadata = 1;
    repeated Instance instances = 2;
}

// only send changed values
message Instance {
    InstanceMeta instance_meta = 1;
    string binary_path = 2; // required?!? 
    repeated string actions = 3; // optional?
    string hostname = 4;
    string ip_address = 5;
}

message InstanceHealths {
    repeated InstanceMeta instances = 1;
    repeated InstanceHealth instance_health = 2;
}

message InstanceHealth {
    // Health status enum
    enum InstancHealthStatus {
        // Unknown status
        UNKNOWN = 0;
        // Healthy status
        HEALTHY = 1;
        // Unhealthy status
        UNHEALTHY = 2;
        // Degraded status
        DEGRADED = 3;
    }
    // NGINX status
    InstancHealthStatus instance_health_status = 1;
    // Provides a human readable context around why a health status is a particular state
    string description = 2;
}

message InstanceMeta {
    enum InstanceType {
        UNKNOWN = 0;
        AGENT = 1;
        NGINX_OSS = 2;
        NGINX_PLUS = 3;
        UNIT = 4;
    }
    InstanceType instance_type = 1;
    string uuid = 2;
    string version = 3;
}

message DataPlaneHealth {
    f5.nginx.agent.api.grpc.mpi.v1.common.MessageRequest message_metadata = 1;
    repeated InstanceHealths instance_healths = 2;
}

message DataPlaneMessage {
    f5.nginx.agent.api.grpc.mpi.v1.common.MessageRequest message_metadata = 1;

}

message ManagementPlaneMessage {
    f5.nginx.agent.api.grpc.mpi.v1.common.MessageRequest message_metadata = 1;
}
